# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1


jobs:
  build-kernel:
    docker:
      - image: ubuntu:latest
    resource_class: large
    steps:
      - run:
          name: "Download Dependencies"
          command: "apt-get update && apt-get install -y bison build-essential bc bison curl libssl-dev git zip python2 python3 flex cpio libncurses5-dev wget ccache default-jre"
      - restore_cache:
          keys: 
          - ccache-whyred-13
      - run:
          name: "Setup ccache"
          command: |
            mkdir -p /home/circleci/.ccache
            export CCACHE_DIR=/home/circleci/.ccache
            ccache -z
            ccache -s -v
      - run:
          name: "Clone kernel"
          command: git clone https://github.com/Whyred-Dynamic-Development/san_kernel_sdm660_4 ./ --depth=1
      - run:
          name: "Build Whyred Kernel"
          command: "./build.sh whyred ccache"
      - run:
          name: "Upload Whyred Kernel"
          command: "mv out/arch/arm64/boot/Image.gz-dtb ./whyred-Image.gz-dtb && curl --upload-file ./whyred-Image.gz-dtb https://free.keep.sh"       
      - save_cache:
          key: 'ccache-whyred-13'
          paths: [ "/home/circleci/.ccache" ]     
      - restore_cache:
          keys: 
          - ccache-tulip-13
      - run:
          name: "Clean"
          command: "git reset --hard && rm -rf .config  && make mrproper"
      - run:
          name: "Build Tulip Kernel"
          command: "./build.sh tulip ccache"    
      - run:
          name: "Upload Whyred Kernel"
          command: "mv out/arch/arm64/boot/Image.gz-dtb ./tulip-Image.gz-dtb && curl --upload-file ./tulip-Image.gz-dtb https://free.keep.sh"
      - save_cache:
          key: 'ccache-tulip-13'
          paths: [ "/home/circleci/.ccache" ]
        
workflows:
  my_workflow:
    jobs:
      - build-kernel


